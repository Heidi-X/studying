# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт
# проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

a = [1, 'some', 34, '335', ['sfd', 12], {'w': 12, '12': 24}, 544]
for each in a:
    print(type(each))

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются
# элементы с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить
# на своем месте. Для заполнения списка элементов необходимо использовать функцию input().

user_input = input('Введите список элементов через запятую>>>')
user_list = user_input.split(',')

i = 0
while i < len(user_list) - 1:
    user_list[i], user_list[i + 1] = user_list[i + 1], user_list[i]
    i = i + 2
print(user_list)



# 3.  Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года
# относится месяц (зима, весна, лето, осень). Напишите решения через list и через dict.


# Решение через list

while True:
    month = input('Введите месяц в виде целого числа от 1 до 12\n>>>')
    if month.isdigit() and int(month) >= 1 and int(month) <= 12:
        month = int(month)
        break
    print('Ошибка ввода!')

winter = [12, 1, 2]
spring = [3, 4, 5]
summer = [6, 7, 8]
fall = [9, 10, 11]

if month in winter:
    print('Этот месяц относится к зиме')
elif month in spring:
    print('Этот месяц относится к весне')
elif month in summer:
    print('Этот месяц относится к лету')
elif month in fall:
    print('Этот месяц относится к осени')

# Решение через dict

while True:
    month = input('Введите месяц в виде целого числа от 1 до 12\n>>>')
    if month.isdigit() and int(month) >= 1 and int(month) <= 12:
        month = int(month)
        break
    print('Ошибка ввода!')

months = {12: 'зима',
          1: 'зима',
          2: 'зима',
          3: 'весна',
          4: 'весна',
          5: 'весна',
          6: 'лето',
          7: 'лето',
          8: 'лето',
          9: 'осень',
          10: 'осень',
          11: 'осень'}

if month in months.keys():
    print(f'Этот месяц относится ко времени года {months[month]}')


# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое
# слово с новой строки. Строки необходимо пронумеровать. Если в слово длинное, выводить
# только первые 10 букв в слове.

string = input('Введите строку из нескольких слов, разделенных пробелами\n>>>')
list = string.split()

for ind, el in enumerate(list, 1):
    print(ind, el[:10])


# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

list = [7, 5, 3, 3, 2]

while True:
    number = input('Введите число - новый элемент рейтинга\n>>>')
    if number.isdigit():
        number = int(number)
        list.append(number)
        break
    print('Ошибка ввода!')

list = sorted(list)
list.reverse()
print(list)


# 6. Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента —
# номер товара и словарь с параметрами (характеристиками товара: название, цена, количество,
# единица измерения). Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

while True:
    i = input('Введите кол-во товаров\n>>>')
    if i.isdigit():
        i = int(i)
        break
    print('Ошибка ввода!')

dict1 = {'название': None, 'цена': None, 'количество': None, 'eд': None}
a = 1
list1 = []
while a <= i:
    list2 = []
    list2.append(a)
    dict2 = dict1.copy()
    dict2['название'] = input(f'Введите название товара {a}>>>')
    dict2['цена'] = input(f'Введите цену товара {a}>>>')
    dict2['количество'] = input(f'Введите количество товара {a}>>>')
    dict2['eд'] = input(f'Введите единицы измерения товара {a}>>>')
    list2.append(dict2)
    tuple1 = tuple(list2)
    list1.append(tuple1)
    a += 1
print(list1)

#  Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ —
#  характеристика товара, например название, а значение — список значений-характеристик,
#  например список названий товаров.
#                                        :(